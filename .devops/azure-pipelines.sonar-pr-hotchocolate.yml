# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [AzurePipelines (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration AzurePipelines_test-pr-hotchocolate --host AzurePipelines
#
# </auto-generated>
# ------------------------------------------------------------------------------

trigger: none

pr:
- master

stages:
  - stage: macos-10.15
    displayName: 'macos-10.15'
    dependsOn: [  ]
    pool:
      vmImage: 'macos-10.15'
    jobs:
      - job: Cover
        displayName: 'Cover'
        dependsOn: [ ]
        strategy:
          parallel: 8
        steps:
          - task: CmdLine@2
            inputs:
              script: |
                #!/bin/bash
                       retries=0
                       brew cask install https://raw.githubusercontent.com/Homebrew/homebrew-cask/8ce4e89d10716666743b28c5a46cd54af59a9cc2/Casks/docker.rb
                       sudo /Applications/Docker.app/Contents/MacOS/Docker --quit-after-install --unattended
                       /Applications/Docker.app/Contents/MacOS/Docker --unattended &
                       while ! docker info 2>/dev/null ; do
                           sleep 5
                           retries=`expr $retries + 1`
                           if pgrep -xq -- "Docker"; then
                               echo 'docker is starting...'
                           else
                               echo 'docker not running, restart'
                               /Applications/Docker.app/Contents/MacOS/Docker --unattended &
                           fi
                           if [ $retries -gt 30 ]; then
                               >&2 echo 'Failed to run docker'
                               exit 1
                           fi;
                           echo 'Waiting for docker service to be in the running state'
                       done
          - task: CmdLine@2
            inputs:
              script: './build.cmd Cover --skip --test-partition $(System.JobPositionInPhase)'
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: test-results
              pathtoPublish: 'output/test-results'
      - job: ReportCoverage
        displayName: 'ReportCoverage'
        dependsOn: [ Cover ]
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              artifactName: 'test-results'
              downloadPath: '$(Build.Repository.LocalPath)/output'
          - task: CmdLine@2
            inputs:
              script: './build.cmd ReportCoverage --skip'
      - job: SonarPr
        displayName: 'SonarPr'
        dependsOn: [ ]
        steps:
          - task: CmdLine@2
            inputs:
              script: |
                #!/bin/bash
                       retries=0
                       brew cask install https://raw.githubusercontent.com/Homebrew/homebrew-cask/8ce4e89d10716666743b28c5a46cd54af59a9cc2/Casks/docker.rb
                       sudo /Applications/Docker.app/Contents/MacOS/Docker --quit-after-install --unattended
                       /Applications/Docker.app/Contents/MacOS/Docker --unattended &
                       while ! docker info 2>/dev/null ; do
                           sleep 5
                           retries=`expr $retries + 1`
                           if pgrep -xq -- "Docker"; then
                               echo 'docker is starting...'
                           else
                               echo 'docker not running, restart'
                               /Applications/Docker.app/Contents/MacOS/Docker --unattended &
                           fi
                           if [ $retries -gt 30 ]; then
                               >&2 echo 'Failed to run docker'
                               exit 1
                           fi;
                           echo 'Waiting for docker service to be in the running state'
                       done
          - task: JavaToolInstaller@0
            inputs:
              versionSpec: '11'
              jdkArchitectureOption: 'x64'
              jdkSourceOption: 'PreInstalled'
              jdkDestinationDirectory: ./.java
          - task: CmdLine@2
            inputs:
              script: './build.cmd SonarPr --skip'
